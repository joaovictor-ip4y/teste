name: Merge Back Hotfix

on:
  push:
    branches:
      - master  # Dispara quando a master recebe um merge

permissions:
  contents: write
  pull-requests: write

jobs:
  merge-back:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do cÃ³digo
        uses: actions/checkout@v4

      - name: Configurar Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Verificar se o PR jÃ¡ existe da master para dev
        id: check-pr
        run: |
          PR_EXISTS=$(gh pr list --base dev --head master --json number --jq '.[0].number' || echo "null")
          echo "PR_EXISTS=$PR_EXISTS"
          echo "PR_EXISTS=$PR_EXISTS" >> $GITHUB_ENV

      - name: Criar Pull Request da master para dev se nÃ£o existir
        id: create-pr
        if: env.PR_EXISTS == 'null'
        run: |
          PR_URL=$(gh pr create \
            --base dev \
            --head master \
            --title "ðŸ”„ Merge back hotfix para dev" \
            --body "Sincronizando as correÃ§Ãµes da master para dev." \
            --reviewer joaovictor-ip4y)
          PR_NUMBER=$(echo $PR_URL | grep -oE '[0-9]+$')
          echo "PR_NUMBER=$PR_NUMBER" >> $GITHUB_ENV

      - name: Aprovar e mesclar PR automaticamente (opcional)
        if: env.PR_EXISTS != 'null' || env.PR_NUMBER != ''
        run: |
          PR_NUMBER=${{ env.PR_EXISTS != 'null' && env.PR_EXISTS || env.PR_NUMBER }}
          gh pr review $PR_NUMBER --approve
          gh pr merge $PR_NUMBER --squash
        env:
          GH_TOKEN: ${{ secrets.PAT_TOKEN }}
